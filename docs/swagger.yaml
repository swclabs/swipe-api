basePath: /
definitions:
  domain.Categories:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  domain.CategoriesList:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Categories'
        type: array
    type: object
  domain.CategoriesRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - description
    - name
    type: object
  domain.Error:
    properties:
      msg:
        type: string
    type: object
  domain.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  domain.LoginResponse:
    properties:
      email:
        type: string
      success:
        type: boolean
      token:
        type: string
    required:
    - email
    - success
    - token
    type: object
  domain.OK:
    properties:
      msg:
        type: string
    type: object
  domain.ProductRequest:
    properties:
      available:
        type: integer
      category_id:
        type: integer
      description:
        type: string
      image:
        type: string
      name:
        type: string
      price:
        type: string
      supplier_id:
        type: integer
    required:
    - available
    - category_id
    - description
    - image
    - name
    - price
    - supplier_id
    type: object
  domain.SignUpRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    type: object
  domain.SignUpResponse:
    properties:
      msg:
        type: string
      success:
        type: boolean
    required:
    - msg
    - success
    type: object
  domain.UserInfo:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      image:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - id
    - image
    - last_name
    - phone_number
    - role
    - username
    type: object
  domain.UserUpdate:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone_number:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - id
    - last_name
    - phone_number
    - username
    type: object
info:
  contact: {}
  description: This is a documentation for the Swiftcart API
  title: Swiftcart API Documentation
  version: 1.0.0
paths:
  /auth:
    get:
      consumes:
      - application/json
      description: check email address before login
      parameters:
      - description: email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OK'
      tags:
      - account_management
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login account.
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.LoginResponse'
      tags:
      - account_management
  /auth/logout:
    get:
      consumes:
      - application/json
      description: logout user from the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OK'
      tags:
      - account_management
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register account for admin.
      parameters:
      - description: Sign Up
        in: body
        name: sign_up
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SignUpResponse'
      tags:
      - account_management
  /categories:
    get:
      consumes:
      - application/json
      description: Get categories
      parameters:
      - description: limit number
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CategoriesList'
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Insert new category
      parameters:
      - description: Categories Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/domain.CategoriesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.LoginResponse'
      tags:
      - product_management
  /common/healthcheck:
    get:
      consumes:
      - application/json
      description: health check api server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - common
  /newsletter:
    get:
      consumes:
      - application/json
      description: Get Product Newsletter
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.LoginResponse'
      tags:
      - products
  /newsletters:
    post:
      consumes:
      - multipart/form-data
      - application/json
      description: Create newsletter
      parameters:
      - description: image of newsletter
        in: formData
        name: img
        required: true
        type: file
      - in: formData
        name: description
        required: true
        type: string
      - in: formData
        name: image
        required: true
        type: string
      - in: formData
        name: subtitle
        required: true
        type: string
      - in: formData
        name: textcolor
        required: true
        type: string
      - in: formData
        name: title
        required: true
        type: string
      - in: formData
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OK'
      tags:
      - product_management
  /oauth2/login:
    get:
      consumes:
      - application/json
      description: Auth0 Login form.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - common
  /products:
    post:
      consumes:
      - multipart/form-data
      description: Create new product
      parameters:
      - description: image of product
        in: formData
        name: img
        required: true
        type: file
      - description: Product Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OK'
      tags:
      - product_management
  /products/img/:id:
    post:
      consumes:
      - multipart/form-data
      description: Insert new product image
      parameters:
      - description: id of product
        in: path
        name: id
        required: true
        type: string
      - description: image of product
        in: formData
        name: img
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.Error'
      tags:
      - product_management
  /users:
    get:
      consumes:
      - application/json
      description: get information for users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.UserInfo'
      tags:
      - account_management
    put:
      consumes:
      - application/json
      description: update information for users.
      parameters:
      - description: Update User
        in: body
        name: UserInfo
        required: true
        schema:
          $ref: '#/definitions/domain.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OK'
      tags:
      - account_management
  /users/image:
    put:
      consumes:
      - application/json
      description: update information for users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.OK'
      tags:
      - account_management
swagger: "2.0"
