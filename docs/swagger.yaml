basePath: /
definitions:
  schema.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  schema.LoginResponse:
    properties:
      email:
        type: string
      success:
        type: boolean
      token:
        type: string
    required:
    - email
    - success
    - token
    type: object
  schema.OK:
    properties:
      msg:
        type: string
    type: object
  schema.SignUpRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    type: object
  schema.SignUpResponse:
    properties:
      msg:
        type: string
      success:
        type: boolean
    required:
    - msg
    - success
    type: object
  schema.UserInfo:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      image:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - id
    - image
    - last_name
    - phone_number
    - role
    - username
    type: object
  schema.UserUpdate:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone_number:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - id
    - last_name
    - phone_number
    - username
    type: object
info:
  contact: {}
  description: This is a documentation for the Swiftcart API
  title: Swiftcart API Documentation
  version: 1.0.0
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login account.
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/schema.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.LoginResponse'
      tags:
      - auth
  /v1/auth/logout:
    get:
      consumes:
      - application/json
      description: logout user from the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OK'
      tags:
      - auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Register account for admin.
      parameters:
      - description: Sign Up
        in: body
        name: sign_up
        required: true
        schema:
          $ref: '#/definitions/schema.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SignUpResponse'
      tags:
      - auth
  /v1/common/healthcheck:
    get:
      consumes:
      - application/json
      description: health check api server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - common
  /v1/oauth2/login:
    get:
      consumes:
      - application/json
      description: Auth0 Login form.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - common
  /v1/users:
    get:
      consumes:
      - application/json
      description: get information for users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.UserInfo'
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update information for users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.OK'
      tags:
      - users
swagger: "2.0"
